<?xml version="1.0" encoding="UTF-8"?>
<sm:StateMachine xmlns:sm="http://www.stateforge.com/StateMachineCpp-v1"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xsi:schemaLocation="http://www.stateforge.com/StateMachineCpp-v1
                                     http://www.stateforge.com/xsd/StateMachineCpp-v1.xsd" >
    <!-- General settings -->
    <settings asynchronous="true" library="qt">
        <description>Demonstrate the parallel feature using a robot witha camera and arm</description>
        <object instance="camera" class="Camera" include="Camera.h"/>
        <object instance="arm" class="Arm" include="Arm.h"/>
    </settings>

    <!-- Events -->
    <events>
        <eventSource name="ManagementEvent">
            <event id="evCalibrateRequest"/>
            <event id="evStop"/>
        </eventSource>
        <eventSource name="CameraCalibrationEvent">
            <event id="evCameraCalibrationDone"/>
            <event id="evCameraCalibrationError"/>
        </eventSource>
        <eventSource name="ArmCalibrationEvent">
            <event id="evArmCalibrationDone"/>
            <event id="evArmCalibrationError"/>
        </eventSource>
    </events>

    <!-- States -->
    <state name="Robot">
        <transition event="evStop" nextState="End"/>
        <!-- Idle state -->
        <state name="Idle">
            <transition event="evCalibrateRequest" nextState="Calibrating"/>
        </state>
        <state name="Calibrating">
            <parallel nextState="Operational">
                <!-- State Camera -->
                <state name="Camera">
                    <!-- State CameraCalibrating -->
                    <state name="CameraCalibrating" description="Calibrate the camera">
                        <onEntry action="camera.calibrateRequest()"/>
                        <transition event="evCameraCalibrationDone" nextState="CameraCalibrationEnd"/>
                        <transition event="evCameraCalibrationError" nextState="End"/>
                    </state>
                    <!-- State CameraCalibrationEnd -->
                    <state name="CameraCalibrationEnd" kind="final"/>
                </state>

                <!-- State Arm -->
                <state name="Arm">
                    <!-- State ArmCalibrating -->
                    <state name="ArmCalibrating" description="Calibrate the arm">
                        <onEntry action="arm.calibrateRequest()"/>
                        <transition event="evArmCalibrationDone" nextState="ArmCalibrationEnd"/>
                        <transition event="evArmCalibrationError" nextState="End"/>
                    </state>
                    <!-- State ArmCalibrationEnd -->
                    <state name="ArmCalibrationEnd" kind="final"/>
                </state>
            </parallel>
        </state>
        <state name="Operational">
        </state>
        <state name="End" kind="final"/>
    </state>
</sm:StateMachine>

